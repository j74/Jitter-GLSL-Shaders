<jittershader name="waveshock">
	<param name="x0" type="float" default="-2.5" />
	<param name="y0" type="float" default="-2.0" />
	<param name="time" type="float" default="0." />
	<param name="s1" type="float" default="3.2" />
	<param name="s2" type="float" default="0.9" />
	<param name="s3" type="float" default="1.7" />
	<param name="tex0" type="int" default="0" />
	<language name="glsl" version="1.0">
		<bind param="x0" program="fp" /> 
		<bind param="y0" program="fp" /> 
		<bind param="s1" program="fp" />
		<bind param="s2" program="fp" />
		<bind param="s3" program="fp" />
		<bind param="time" program="fp" />
		<bind param="tex0" program="fp" />
		<program name="vp" type="vertex">
<![CDATA[
varying vec2 texcoord0;
void main()
{
	// perform standard transform on vertex
	gl_Position = ftransform();  
	// transform texcoord
	texcoord0 = vec2(gl_TextureMatrix[0]*gl_MultiTexCoord0);
}
]]>
		</program>
		<program name="fp" type="fragment">
<![CDATA[
varying vec2 texcoord0;
uniform sampler2DRect tex0;
uniform float x0;
uniform float y0; 
uniform float time; 
uniform float s1;
uniform float s2;
uniform float s3;
vec3 shockParams = vec3(s1,s2,s3); // 10.0, 0.8, 0.1
vec2 center = vec2(((x0+6.4)/12.8),((y0+6.4)/12.8));
vec4 out_vec;
float time_proc = time;
float width_tex = textureSize(tex0,0);

void main()
{      
 vec2 coord = texcoord0;// absolute coordinate values of texture. 
			// if tex0 is 960x540, values of variate between 0.0 and 960.0
			// and for y between 0.0 and 540.0
			// use textureSize(tex_sampler_name,0) to get the max texture size (in this example 960.0).

 vec2 norm_coord = vec2(coord.x/width_tex,coord.y/(width_tex*0.5625)); 
			// coordinates normalized to 0. 1., width 1.77 ratio

 float distance_center = distance(norm_coord,center);

  if ( (distance_center <= (time_proc + shockParams.z)) &&
       (distance_center >= (time_proc - shockParams.z)))
  {
    float diff = (distance_center - time_proc);
    float powDiff = 1.0 - pow(abs(diff*shockParams.x),shockParams.y);
    float difftime_proc = diff *powDiff;
    vec2 diffUV = normalize(coord-center);
    norm_coord = norm_coord + (diffUV * difftime_proc);
    coord = vec2(norm_coord.x*width_tex,norm_coord.y*width_tex*0.5625);
  } 
 out_vec = texture2DRect(tex0, coord);
 gl_FragColor = out_vec;
}
]]>
		</program>
	</language>
</jittershader>