<jittershader name="textflow">
	<param name="time" type="float" default="0.0" />
	<param name="gain_t" type="float" default="0.1" />
	<param name="gain_r" type="float" default="1.0" />
	<param name="gain_g" type="float" default="1.0" />
	<param name="gain_b" type="float" default="1.0" />
	<param name="tex0" type="int" default="0" />
	<language name="glsl" version="1.0">
		<bind param="time" program="fp" />
		<bind param="gain_t" program="fp" />
		<bind param="gain_r" program="fp" />
		<bind param="gain_g" program="fp" />
		<bind param="gain_b" program="fp" />
		<bind param="tex0" program="fp" />	
		<program name="vp" type="vertex">
<![CDATA[
varying vec2 texcoord0;
varying vec2 texcoord1;

void main()
{
	// perform standard transform on vertex
	gl_Position = ftransform();
    
	// transform texcoords
	texcoord0 = vec2(gl_TextureMatrix[0] * gl_MultiTexCoord0);
	texcoord1 = vec2(gl_TextureMatrix[1] * gl_MultiTexCoord1);
}
]]>
		</program>
		<program name="fp" type="fragment">
<![CDATA[
varying vec2 texcoord0;
uniform sampler2DRect tex0;
uniform float time;
uniform float gain_t;
uniform float gain_r;
uniform float gain_g;
uniform float gain_b;
vec2 resolution = textureSize(tex0,0);

void main(void)
{
    vec2 q = texcoord0 / resolution;
    vec2 uv = 0.5 + (q-0.5)*(0.9 + 0.1*sin(0.2*time*gain_t));

    vec3 oricol = texture2DRect(tex0,vec2(q.x*resolution.x,(1.0-q.y)*resolution.y)).xyz;
    vec3 col;

    col.r = gain_r*texture2DRect(tex0,vec2(uv.x*resolution.x+0.003*resolution.x,-uv.y*resolution.y)).x;
    col.g = gain_g*texture2DRect(tex0,vec2(uv.x*resolution.x+0.000*resolution.x,-uv.y*resolution.y)).y;
    col.b = gain_b*texture2DRect(tex0,vec2(uv.x*resolution.x-0.003*resolution.x,-uv.y*resolution.y)).z;

    col = clamp(col*0.5+0.5*col*col*1.2,0.0,1.0);

    col *= 0.5 + 0.5*16.0*uv.x*uv.y*(1.0-uv.x)*(1.0-uv.y);

    col *= vec3(0.8,1.0,0.7);

    col *= 0.9+0.1*sin(10.0*time*gain_t+uv.y*1000.0);

    col *= 0.97+0.03*sin(110.0*time*gain_t);

    float comp = smoothstep( 0.2, 0.7, sin(time*gain_t) );
    col = mix( col, oricol, clamp(-2.0+2.0*q.x+3.0*comp,0.0,1.0) );

    gl_FragColor = vec4(col,1.0)*texture2DRect(tex0,texcoord0);
}
]]>
		</program>
	</language>
</jittershader>