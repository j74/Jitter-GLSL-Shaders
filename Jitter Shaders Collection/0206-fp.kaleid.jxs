<jittershader name="fp-kaleid">
	<param name="scaleX" type="float" default="0." />
	<param name="scaleY" type="float" default="0." />
	<param name="offsetX" type="float" default="0." />
	<param name="offsetY" type="float" default="0." />
	<param name="originX" type="float" default="0." />
	<param name="originY" type="float" default="0." />
	<param name="divide" type="float" default="1.6" />
	<param name="tex0" type="int" default="0" />
	<language name="glsl" version="1.0">
		<bind param="scaleX" program="fp" />
		<bind param="scaleY" program="fp" />
		<bind param="offsetX" program="fp" />
		<bind param="offsetY" program="fp" />
		<bind param="originX" program="fp" />
		<bind param="originY" program="fp" />
		<bind param="divide" program="fp" />
		<bind param="tex0" program="fp" />
		<program name="vp" type="vertex">
<![CDATA[
varying vec2 texcoord0;
varying vec2 texcoord1;
varying vec2 texdim0;
varying vec2 texdim1;
varying vec2 texorient0;
varying vec2 texorient1;

void main()
{
    gl_Position = ftransform();
    texcoord0 = vec2(gl_TextureMatrix[0] * gl_MultiTexCoord0);
    texcoord1 = vec2(gl_TextureMatrix[1] * gl_MultiTexCoord1);
    texdim0 = vec2 (abs(gl_TextureMatrix[0][0][0]),abs(gl_TextureMatrix[0][1][1]));
    texdim1 = vec2 (abs(gl_TextureMatrix[1][0][0]),abs(gl_TextureMatrix[1][1][1]));
    texorient0 = vec2 (gl_TextureMatrix[0][0][0]/texdim0.x,gl_TextureMatrix[0][1][1]/texdim0.y);
    texorient1 = vec2 (gl_TextureMatrix[1][0][0]/texdim1.x,gl_TextureMatrix[1][1][1]/texdim1.y);
}
]]>
		</program>
		<program name="fp" type="fragment">
<![CDATA[
varying vec2 texcoord0;
varying vec2 texdim0;
uniform float scaleX;
uniform float offsetX;
uniform float originX;
uniform float scaleY;
uniform float offsetY;
uniform float originY;
uniform float divide;
vec2 scale = vec2(1.0 + scaleX/6.4, 1.0 + scaleY/6.4);
vec2 offset = vec2(offsetX/6.4, offsetY/6.4);
vec2 origin = vec2(originX/6.4, originY/6.4);
float div = 16.0 * (divide + 6.4)/6.4;  
uniform sampler2DRect tex0;
const float pi=3.1415926;

void main()
{
	vec2 point = abs(mod((texcoord0*scale)/texdim0+origin,1.));
	vec2 dt = point-0.5;
	float radius = sqrt(dot(dt,dt)); //hypot
	float theta = atan(dt.y,dt.x)+pi;
	float phi = 2.*pi/div;

	float modtheta = mod(abs(theta),phi*2.);
	float foldtheta = phi-abs(modtheta-phi);
	
	vec2 no = vec2(-cos(foldtheta)*radius, -sin(foldtheta)*radius);	
	no = (no+0.5)*texdim0;

	vec2 off = abs(no+offset*texdim0);
	vec2 modoff = mod(off,texdim0*2.);
	vec2 fold = texdim0-abs(modoff-texdim0);
	gl_FragColor = texture2DRect(tex0,fold);
}
]]>
		</program>
	</language>
</jittershader>
