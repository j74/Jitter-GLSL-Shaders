<jittershader name="textflow">
	<param name="x0" type="float" default="0.75" />
	<param name="y0" type="float" default="0.8" />
	<param name="time" type="float" default="0.0" />
	<param name="gain_c" type="float" default="1.0" />
	<param name="gain_p" type="float" default="1.5" />
	<param name="gain_r" type="float" default="1.0" />
	<param name="gain_s1" type="float" default="1.0" />
	<param name="gain_s2" type="float" default="1.0" />
	<param name="gain_t" type="float" default="0.2" />
	<param name="tex0" type="int" default="0" />
	<language name="glsl" version="1.0">
		<bind param="time" program="fp" />
		<bind param="y0" program="fp" />
		<bind param="x0" program="fp" />
		<bind param="gain_c" program="fp" />
		<bind param="gain_p" program="fp" />
		<bind param="gain_r" program="fp" />
		<bind param="gain_s1" program="fp" />
		<bind param="gain_s2" program="fp" />
		<bind param="gain_t" program="fp" />
		<bind param="tex0" program="fp" />	
		<program name="vp" type="vertex">
<![CDATA[
varying vec2 texcoord0;
varying vec2 texcoord1;

void main()
{
	// perform standard transform on vertex
	gl_Position = ftransform();
    
	// transform texcoords
	texcoord0 = vec2(gl_TextureMatrix[0] * gl_MultiTexCoord0);
	texcoord1 = vec2(gl_TextureMatrix[1] * gl_MultiTexCoord1);
}
]]>
		</program>
		<program name="fp" type="fragment">
<![CDATA[
varying vec2 texcoord0;
uniform sampler2DRect tex0;
uniform float time;
uniform float gain_c;
uniform float gain_p;
uniform float gain_r;
uniform float gain_s1;
uniform float gain_s2;
uniform float gain_t;
uniform float y0;
uniform float x0;
vec2 resolution = textureSize(tex0,0);

void main(void)
{
    vec2 halfres = resolution/2.0;
    vec2 cPos = texcoord0;

    cPos.x -= x0*(0.5*halfres.x*sin(gain_c*gain_t/2.0)+0.3*halfres.x*cos(gain_c*gain_t)+halfres.x);
    cPos.y -= y0*(0.4*halfres.y*sin(gain_c*gain_t/5.0)+0.3*halfres.y*cos(gain_c*gain_t)+halfres.y);
    float cLength = length(cPos);

    vec2 uv = gain_r*texcoord0/resolution+gain_s1*gain_s2*(cPos/cLength)*sin(gain_p*cLength/30.0-time*gain_t*10.0)/25.0;
    vec2 coord = vec2(uv.x*resolution.x,uv.y*resolution.y);
    vec3 col = texture2DRect(tex0,coord).xyz*50.0/cLength;

    gl_FragColor = vec4(col,1.0);
}
]]>
		</program>
	</language>
</jittershader>