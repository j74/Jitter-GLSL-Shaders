<jittershader name="">
	<param name="mode" type="float" default="0.0" />
	<param name="gain" type="float" default="0.0" />
	<param name="section" type="float" default="6.4" />
	<param name="tex0" type="int" default="0" />
	<param name="tex1" type="int" default="1" />
	<language name="glsl" version="1.4">
		<bind param="mode" program="fp" />
		<bind param="gain" program="fp" />
		<bind param="section" program="fp" />
		<bind param="tex0" program="fp" />
		<bind param="tex1" program="fp" />
		<program name="vp" type="vertex">
<![CDATA[
varying vec2 texcoord0;
varying vec2 texcoord1;

void main(void)
{
    gl_Position     = ftransform();
    // transform texcoords
    texcoord0 = vec2(gl_TextureMatrix[0] * gl_MultiTexCoord0);
    texcoord1 = vec2(gl_TextureMatrix[1] * gl_MultiTexCoord1);
}
]]>
		</program>
		<program name="fp" type="fragment">
<![CDATA[
varying vec2 texcoord0;
varying vec2 texcoord1;
uniform sampler2DRect tex0;
uniform sampler2DRect tex1;
uniform float mode;
uniform float gain;
uniform float section;
float gain_norm = (gain+6.3)/12.7;
float section_norm = (section+6.3)/12.7;
vec2 resolution = textureSize(tex0,0);
vec2 shift;
void main (void)
{
      vec4 b = vec4(texture2DRect(tex1, texcoord1));
      if (mode >= 1.0) 
      {
       shift = vec2(section_norm*texcoord0.x+gain_norm*(0.299*b.r+0.587*b.g+0.114*b.b)*resolution.x,section_norm*texcoord0.y+gain_norm*(0.299*b.r+0.587*b.g+0.114*b.b)*resolution.y);
      } else {
       shift = vec2(section_norm*texcoord0.x+gain_norm*b.r*resolution.x,section_norm*texcoord0.y+gain_norm*b.r*resolution.y);
      }
      vec4 a = vec4(texture2DRect(tex0, shift));
      gl_FragColor = vec4(a.r,a.g,a.b,1.0);
}
]]>
	</program>
    </language>
</jittershader>