<jittershader name="focus-blur">
	<param name="gain1" type="float" default="0.0" />
	<param name="gain2" type="float" default="0.0" />
	<param name="gain3" type="float" default="-4.3" />
	<param name="tex0" type="int" default="0" />
	<language name="glsl" version="1.0">
		<bind param="gain1" program="fp" />
		<bind param="gain2" program="fp" />
		<bind param="gain3" program="fp" />
		<bind param="tex0" program="fp" />
		<program name="vp" type="vertex">
<![CDATA[
varying vec2 texcoord0;
varying vec2 texdim0;
varying vec2 texorient0;

void main()
{
    // perform standard transform on vertex
    gl_Position = ftransform();
    // transform texcoords
    texcoord0 = vec2(gl_TextureMatrix[0] * gl_MultiTexCoord0);
    // extract the x and y scalars from the texture matrix to determine dimensions
    texdim0 = vec2 (abs(gl_TextureMatrix[0][0][0]),abs(gl_TextureMatrix[0][1][1]));
    // extract the sign for orientation
    texorient0 = vec2 (gl_TextureMatrix[0][0][0]/texdim0.x,gl_TextureMatrix[0][1][1]/texdim0.y);
} 
]]>
		</program>
		<program name="fp" type="fragment">
<![CDATA[
varying vec2 texcoord0;
varying vec2 texdim0;
uniform sampler2DRect tex0;
uniform float gain1;
uniform float gain2;
uniform float gain3;
vec2 r;

void main(void)
{
    	vec2 p = vec2(texcoord0.x / texdim0.x,texcoord0.y / texdim0.y);
	float gain1_norm = (gain1+6.3)/6.4;
	float gain2_norm = (gain2)/6.4;
	float gain3_norm = (gain3+6.3)/2.0;
	r.x = abs(0.5 - p.x);
	r.y = abs(0.5 - p.y);
	vec2 wi = vec2(0.,0.);
    	vec4 sampleM  = texture2DRect(tex0, texcoord0);
        wi.x = pow(((r.x)/(0.5)),2.0); 
        wi.y = pow(((r.y)/(0.5)),2.0); 
	float wi_a = (wi.x+wi.y)/2.;
    	vec2 texcoordB0 = texcoord0 - 1.0*gain1_norm*gain3_norm;
    	vec2 texcoordF0 = texcoord0 + 1.0*gain1_norm*gain3_norm;
    	vec2 texcoordB1 = texcoord0 - 2.0*gain1_norm*gain3_norm;
    	vec2 texcoordF1 = texcoord0 + 2.0*gain1_norm*gain3_norm;
    	vec2 texcoordB2 = texcoord0 - 3.0*gain1_norm*gain3_norm;
    	vec2 texcoordF2 = texcoord0 + 3.0*gain1_norm*gain3_norm;
    	vec2 texcoordB3 = texcoord0 - 4.0*gain1_norm*gain3_norm;
    	vec2 texcoordF3 = texcoord0 + 4.0*gain1_norm*gain3_norm;
    	vec2 texcoordB4 = texcoord0 - 5.0*gain1_norm*gain3_norm;
    	vec2 texcoordF4 = texcoord0 + 5.0*gain1_norm*gain3_norm;
    	vec4 sampleB0 = texture2DRect(tex0, texcoordB0);
    	vec4 sampleF0 = texture2DRect(tex0, texcoordF0);
    	vec4 sampleB1 = texture2DRect(tex0, texcoordB1);
    	vec4 sampleF1 = texture2DRect(tex0, texcoordF1);
    	vec4 sampleB2 = texture2DRect(tex0, texcoordB2);
    	vec4 sampleF2 = texture2DRect(tex0, texcoordF2);
    	vec4 sampleB3 = texture2DRect(tex0, texcoordB3);
    	vec4 sampleF3 = texture2DRect(tex0, texcoordF3);
    	vec4 sampleB4 = texture2DRect(tex0, texcoordB4);
    	vec4 sampleF4 = texture2DRect(tex0, texcoordF4);
    	gl_FragColor = 0.9 * (1.-wi_a) * sampleM + ((gain2_norm+1.)*wi_a) * 0.17 * (sampleB0 + sampleF0) + ((gain2_norm+1.)*wi_a) * 0.15 * (sampleB1 + sampleF1) + ((gain2_norm+1.)*wi_a) * 0.10 * (sampleB2 + sampleF2) + ((gain2_norm+1.)*wi_a) * 0.05 * (sampleB3 + sampleF3) + ((gain2_norm+1.)*wi_a) * 0.03 * (sampleB4 + sampleF4);
}
]]>
		</program>
	</language>
</jittershader>