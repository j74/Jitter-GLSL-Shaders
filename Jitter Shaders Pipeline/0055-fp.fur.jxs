<jittershader name="fur">
	<param name="layer" type="float" default="-6.3" />
	<param name="lenght" type="float" default="-6.3" />
	<param name="displaceX" type="float" default="0.0" />
	<param name="displaceY" type="float" default="0.0" />
	<param name="displaceZ" type="float" default="0.0" />
	<param name="tex0" type="int" default="0" />
	<param name="tex1" type="int" default="1" />
	<param name="tex1size" type="float" default="-6.3" />
	<language name="glsl" version="1.2">
		<bind param="layer" program="vp" />		
		<bind param="lenght" program="vp" />	
		<bind param="displaceX" program="vp" />		
		<bind param="displaceY" program="vp" />		
		<bind param="displaceZ" program="vp" />		
		<bind param="tex1size" program="fp" />
		<bind param="tex0" program="fp" />
		<bind param="tex1" program="fp" />
		<program name="vp" type="vertex">
<![CDATA[
#version 120
#extension GL_ARB_texture_rectangle: enable
uniform float lenght;
float NLength = (lenght + 6.3)/6.3;
uniform float layer;
float NLayer = (layer + 6.3)/12.7;
uniform float displaceX;
uniform float displaceY;
uniform float displaceZ;
vec3 displacement = vec3(displaceX,displaceY,displaceZ);
varying float currentLayer;
varying vec2 texcoord;

void main() {
	vec3 p = gl_Vertex.xyz + (gl_Normal * NLength * NLayer);	
	float k = pow(NLayer, 3);
	p += displacement * k;
	gl_Position = gl_ModelViewProjectionMatrix * vec4(p, 1.0);
	texcoord = vec2(gl_TextureMatrix[0] * gl_MultiTexCoord0);
	currentLayer = NLayer;
}
]]>		
		</program>
		<program name="fp" type="fragment">
<![CDATA[
#version 120
#extension GL_ARB_texture_rectangle: enable
uniform sampler2DRect tex0; 	// Texture Map
uniform sampler2DRect tex1;	// Visibility Noise
uniform float tex1size;
float size_norm = (tex1size + 6.3)*100.;
varying float currentLayer;
varying vec2 texcoord;
float visibility = 1.;
vec2 modulo = vec2(size_norm,size_norm);
vec2 adaptcoord = texcoord;

void main() {
	if (size_norm > 0.) adaptcoord = vec2(mod(texcoord.x,modulo.x),mod(texcoord.y,modulo.y));
	vec4 TexColor = texture2DRect(tex0, texcoord);
	vec4 TexNoise = texture2DRect(tex1, adaptcoord);
	float VisibilityNoise = 0.33*(TexNoise.r+TexNoise.g+TexNoise.b);
	if (currentLayer > VisibilityNoise) visibility = 0.;
	if (visibility < 0.02) discard;
	gl_FragColor = TexColor;
}
]]>		
		</program>		
	</language>
</jittershader>


